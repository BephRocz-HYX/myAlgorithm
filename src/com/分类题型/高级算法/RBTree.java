package com.分类题型.高级算法;

/**
 * Description:
 * Created By @Author my on @Date 2020/4/9 18:10
 */
public class RBTree {
    /**
     * 1）每个结点要么是红的，要么是黑的。
     * 2）根结点是黑的。
     * 3）每个叶结点（叶结点即指树尾端NIL指针或NULL结点）是黑的。
     * 4）如果一个结点是红的，那么它的俩个儿子都是黑的。
     * 5）对于任一结点而言，其到叶结点树尾端NIL指针的每一条路径都包含相同数目的黑结点。
     */
    /**
     * 能保证在最坏情况下，基本的动态几何操作的时间均为O（lgn）
     */

    /**
     * 与BST对比：
     *  性质45可用决定红黑树可以能确保树的最长路径不大于两倍的最短路径的长度
     * 与AVl对比：
     *  红黑树的算法时间复杂度和AVL相同，但统计性能比AVL树更高，所以在插入和删除中所做的后期维护操作肯定会比红黑树要耗时好多，但是他们的查找效率都是O(logN)，所以红黑树应用还是高于AVL树的. 实际上插入 AVL 树和红黑树的速度取决于你所插入的数据.如果你的数据分布较好,则比较宜于采用 AVL树(例如随机产生系列数),但是如果你想处理比较杂乱的情况,则红黑树是比较快的
     */

    //阅读
    // https://segmentfault.com/a/1190000014037447
}
